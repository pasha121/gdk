cache:
  key: "17"
  paths:
    - subprojects/packagecache/

image: greenaddress/ci@sha256:dad739cbaa366afed1a73d74f985787950e0298fa5e58791e529923c83ad72db

stages:
  - format
  - build
  - test
  - deploy
  - publish

.ndk_release:
  tags:
    - ga
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
    expire_in: 1 day
    when: on_success
    paths:
    - gdk-android-jni

.osx_test:
  tags:
    - osx
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - subprojects/packagecache/

.py_release:
  tags:
    - ga
  before_script:
    - mkdir $CI_PROJECT_DIR/gdk-python
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
    expire_in: 1 day
    when: on_success
    paths:
    - gdk-python

.ios_release:
  extends: .osx_test
  before_script:
    - mkdir $CI_PROJECT_DIR/gdk-iphone
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
    expire_in: 1 day
    when: on_success
    paths:
    - gdk-iphone

.ios_sim_release:
  extends: .osx_test
  before_script:
    - mkdir $CI_PROJECT_DIR/gdk-iphone-sim
  artifacts:
    name: "$CI_JOB_NAME-$CI_COMMIT_SHORT_SHA"
    expire_in: 1 day
    when: on_success
    paths:
    - gdk-iphone-sim

test_format:
  tags:
    - ga
  stage: format
  script:
    - ./tools/format.sh && git diff --exit-code

release_py3m_bullseye:
  extends: .py_release
  script:
    - NUM_JOBS=16 ./tools/build.sh --install $PWD/gdk-python --gcc --python-version 3.9 --external-deps-dir /prebuild/gcc

release_py3m_bullseye_debug:
  extends: .py_release
  when: manual
  script:
    - NUM_JOBS=16 ./tools/build.sh --buildtype=debug --install $PWD/gdk-python --gcc --python-version 3.9 --external-deps-dir /prebuild/gcc

release_py3m_ubuntu_18.04:
  image: greenaddress/ubuntu_ci@sha256:bf83a3116c8fcb21e6535497c3aa7db266f4e8a823387ad30442c5a53f54bbff
  extends: .py_release
  script:
    - NUM_JOBS=16 ./tools/build.sh --install $PWD/gdk-python --gcc --python-version 3.6 --external-deps-dir /prebuild/gcc

release_py3m_osx:
  extends: .py_release
  tags:
    - osx-ia
  script:
    - cd $CI_PROJECT_DIR
    - python3 -m venv venv
    - source venv/bin/activate
    - pip install -r ./tools/requirements.txt
    - NUM_JOBS=16 ./tools/builddeps.sh --clang --prefix $PWD/clang-deps
    - NUM_JOBS=16 ./tools/build.sh --install $PWD/gdk-python --clang --python-version 3.9 --external-deps-dir $PWD/clang-deps

release_py3m_osx_m1:
  extends: .py_release
  tags:
    - osx-m1
  script:
    - cd $CI_PROJECT_DIR
    - python3 -m venv venv
    - source venv/bin/activate
    - pip install -r ./tools/requirements.txt
    - NUM_JOBS=16 ./tools/builddeps.sh --clang --prefix $PWD/clang-deps
    - NUM_JOBS=16 ./tools/build.sh --install $PWD/gdk-python --clang --python-version 3.9 --external-deps-dir $PWD/clang-deps

test_fedora_clang:
  image: greenaddress/fedora_ci@sha256:78997558029c74fbf6ad078b0eb75663749a216b676f6df2eb17dba8c97acc0e
  tags:
    - ga
  script:
    - NUM_JOBS=16 ./tools/build.sh --clang --external-deps-dir /prebuild/clang

test_clang_debug:
  tags:
    - ga
  script:
    - NUM_JOBS=16 ./tools/build.sh --clang --enable-tests --external-deps-dir /prebuild/clang # REVERTME
    - ./build-clang/test_aes_gcm >/dev/null
    - ./build-clang/test_json
    - ./build-clang/test_networks

gdk_clang_ndk_armeabi-v7a:
  extends: .ndk_release
  script:
    - mkdir gdk-android-jni
    - NUM_JOBS=16 ./tools/build.sh --install $PWD/gdk-android-jni --ndk armeabi-v7a --external-deps-dir /prebuild/armv7a

gdk_clang_ndk_arm64-v8a:
  extends: .ndk_release
  script:
    - mkdir gdk-android-jni
    - NUM_JOBS=16 ./tools/build.sh --install $PWD/gdk-android-jni --ndk arm64-v8a --external-deps-dir /prebuild/armv8a

gdk_clang_ndk_arm64-v8a-debug:
  extends: .ndk_release
  when: manual
  script:
    - mkdir gdk-android-jni
    - NUM_JOBS=16 ./tools/build.sh --buildtype=debug --install $PWD/gdk-android-jni --ndk arm64-v8a --external-deps-dir /prebuild/armv8a

gdk_clang_ndk_x86:
  extends: .ndk_release
  script:
    - mkdir gdk-android-jni
    - NUM_JOBS=16 ./tools/build.sh --install $PWD/gdk-android-jni --ndk x86 --external-deps-dir /prebuild/x86

gdk_clang_ndk_x86_64:
  extends: .ndk_release
  script:
    - mkdir gdk-android-jni
    - NUM_JOBS=16 ./tools/build.sh --install $PWD/gdk-android-jni --ndk x86_64 --external-deps-dir /prebuild/x86_64

test_rust:
  tags:
    - ga
  variables:
    WALLY_DIR: "/prebld/clang/libwally-core/build/lib"
    RUSTFLAGS: "-C instrument-coverage"
    RUST_BACKTRACE: "1"
    LLVM_PROFILE_FILE: "coverage-%p-%m.profraw"
  script:
    - source /root/.cargo/env
    - cd subprojects/gdk_rust
    - export WALLY_DIR=/prebuild/gcc/libwally-core/build/lib
    - RUST_BACKTRACE=1 timeout 20m cargo test -- --nocapture --test-threads 6

rust_audit:
  stage: test
  tags:
    - ga
  script:
    - source /root/.cargo/env
    - rustup override set 1.64.0
    - cd subprojects/gdk_rust/
    - cargo audit -D warnings --ignore RUSTSEC-2021-0127
  allow_failure: true

test_osx_clang:
  extends: .osx_test
  script:
    - cd $CI_PROJECT_DIR
    - ./tools/clean.sh dirs
    - virtualenv venv && source venv/bin/activate && pip install -r ./tools/requirements.txt
    - NUM_JOBS=16 ./tools/builddeps.sh --clang --prefix $PWD/clang-deps
    - NUM_JOBS=16 ./tools/build.sh --clang --external-deps-dir $PWD/clang-deps

release_osx_ios:
  extends: .ios_release
  script:
    - cd $CI_PROJECT_DIR
    - ./tools/clean.sh dirs
    - virtualenv venv && source venv/bin/activate && pip install -r ./tools/requirements.txt
    - NUM_JOBS=16 ./tools/builddeps.sh --iphone --prefix $PWD/iphone-deps
    - NUM_JOBS=16 ./tools/build.sh --iphone static --install $PWD/gdk-iphone --external-deps-dir $PWD/iphone-deps

release_osx_ios_sim:
  extends: .ios_sim_release
  script:
    - cd $CI_PROJECT_DIR
    - ./tools/clean.sh dirs
    - virtualenv venv && source venv/bin/activate && pip install -r ./tools/requirements.txt
    - NUM_JOBS=16 ./tools/builddeps.sh --iphonesim --prefix $PWD/iphonesim-deps
    - NUM_JOBS=16 ./tools/build.sh --iphonesim static --install $PWD/gdk-iphone-sim --external-deps-dir $PWD/iphonesim-deps

release_osx_ios_debug:
  extends: .ios_release
  when: manual
  script:
    - cd $CI_PROJECT_DIR
    - ./tools/clean.sh dirs
    - virtualenv venv && source venv/bin/activate && pip install -r ./tools/requirements.txt
    - NUM_JOBS=16 ./tools/builddeps.sh --iphone --buildtype debug --prefix $PWD/iphone-deps-debug
    - NUM_JOBS=16 ./tools/build.sh --iphone static --buildtype=debug --install $PWD/gdk-iphone --external-deps-dir $PWD/iphone-deps-debug

release_osx_ios_sim_debug:
  extends: .ios_sim_release
  when: manual
  script:
    - cd $CI_PROJECT_DIR
    - ./tools/clean.sh dirs
    - virtualenv venv && source venv/bin/activate && pip install -r ./tools/requirements.txt
    - NUM_JOBS=16 ./tools/builddeps.sh --iphonesim --buildtype debug --prefix $PWD/iphonesim-deps-debug
    - NUM_JOBS=16 ./tools/build.sh --iphonesim static --buildtype=debug --install $PWD/gdk-iphone-sim --external-deps-dir $PWD/iphonesim-deps-debug

test_osx_clang_ndk_armeabi-v7a:
  only:
    refs:
      - master
  extends: .osx_test
  when: manual
  script:
    - cd $CI_PROJECT_DIR
    - ./tools/clean.sh dirs
    - virtualenv venv && source venv/bin/activate && pip install -r ./tools/requirements.txt
    - NUM_JOBS=16 ./tools/builddeps.sh --ndk armeabi-v7a --prefix $PWD/android-armeabi-v7a
    - NUM_JOBS=16 ANDROID_NDK=/opt/android-ndk-r23b ./tools/build.sh --ndk armeabi-v7a --external-deps-dir $PWD/android-armeabi-v7a

test_osx_clang_ndk_arm64-v8a:
  only:
    refs:
      - master
  extends: .osx_test
  when: manual
  script:
    - cd $CI_PROJECT_DIR
    - ./tools/clean.sh dirs
    - virtualenv venv && source venv/bin/activate && pip install -r ./tools/requirements.txt
    - NUM_JOBS=16 ./tools/builddeps.sh --ndk arm64-v8a --prefix $PWD/android-arm64-v8a
    - NUM_JOBS=16 ANDROID_NDK=/opt/ndroid-ndk-r23b ./tools/build.sh --ndk arm64-v8a --external-deps-dir $PWD/android-arm64-v8a

test_osx_clang_ndk_x86:
  only:
    refs:
      - master
  extends: .osx_test
  when: manual
  script:
    - cd $CI_PROJECT_DIR
    - ./tools/clean.sh dirs
    - virtualenv venv && source venv/bin/activate && pip install -r ./tools/requirements.txt
    - NUM_JOBS=16 ./tools/builddeps.sh --ndk x86 --prefix $PWD/android-x86
    - NUM_JOBS=16 ANDROID_NDK=/opt/android-ndk-r23b ./tools/build.sh --ndk x86 --external-deps-dir $PWD/android-x86

test_osx_clang_ndk_x86_64:
  only:
    refs:
      - master
  when: manual
  extends: .osx_test
  script:
    - cd $CI_PROJECT_DIR
    - ./tools/clean.sh dirs
    - virtualenv venv && source venv/bin/activate && pip install -r ./tools/requirements.txt
    - NUM_JOBS=16 ./tools/builddeps.sh --ndk x86_64 --prefix $PWD/android-x86_64
    - NUM_JOBS=16 ANDROID_NDK=/opt/android-ndk-r23b ./tools/build.sh --ndk x86_64 --external-deps-dir $PWD/android-x86_64

test_windows_mingw_w64_cross:
  tags:
    - ga
  artifacts:
    expire_in: 1 hour
    when: on_success
    paths:
    - build-windows-mingw-w64/src/libgreenaddress*
  script:
    - NUM_JOBS=16 ./tools/build.sh --mingw-w64 --external-deps-dir /prebuild/mingw-w64

apidocs:
  tags:
    - ga
  artifacts:
    expire_in: 14 days
    when: on_success
    paths:
    - apidocs.tar.gz
  script:
    - virtualenv -p python3 .venv
    - source .venv/bin/activate
    - pip3 install -r docs/requirements.txt
    - sphinx-build -b html -a -c docs/source docs/source docs/build/html
    - cd docs/build && tar czf ../../apidocs.tar.gz html/ && cd ../..
    - deactivate

package_release:
  tags:
    - garelease
  stage: deploy
  artifacts:
    name: "$CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA"
    expire_in: 14 days
    paths:
    - $CI_PROJECT_DIR/gdk_dist
    when: on_success
  script:
    - cd $CI_PROJECT_DIR
    - mkdir gdk-android-symbols
    - mkdir gdk_dist
    - find gdk-android-jni -name "*.syms" -type f -exec cp --parents {} gdk-android-symbols \;
    - tar -czf gdk_dist/gdk-android-symbols.tar.gz gdk-android-symbols --remove-files
    - find gdk-android-jni -name "*.a" -type f -delete
    - find gdk-android-jni -name "*.syms" -type f -delete
    - tar -czf gdk_dist/gdk-android-jni.tar.gz gdk-android-jni --remove-files
    - tar -czf gdk_dist/gdk-iphone.tar.gz gdk-iphone --remove-files
    - tar -czf gdk_dist/gdk-iphone-sim.tar.gz gdk-iphone-sim --remove-files
    - mv gdk-python/*whl gdk_dist/
    - cd gdk_dist
    - /opt/process_release
  dependencies:
  - gdk_clang_ndk_armeabi-v7a
  - gdk_clang_ndk_arm64-v8a
  - gdk_clang_ndk_x86
  - gdk_clang_ndk_x86_64
  - release_py3m_bullseye
  - release_py3m_ubuntu_18.04
  - release_py3m_osx
  - release_py3m_osx_m1
  - release_osx_ios
  - apidocs
  - release_osx_ios_sim

cp_gcloud:
  image: blockstream/gcloud-docker-tf:1.1.7
  tags:
    - ga
  stage: publish
  script:
    - echo gs://green-gdk-builds/$CI_PROJECT_NAME-$CI_COMMIT_SHA
    - TMPF=$(mktemp) || exit 1
    - echo $GCLOUD_PUSH_KEY > $TMPF
    - export GOOGLE_APPLICATION_CREDENTIALS=$TMPF
    - gcloud auth activate-service-account --key-file=$TMPF
    - gsutil cp -r $CI_PROJECT_DIR/gdk_dist gs://green-gdk-builds/$CI_PROJECT_NAME-$CI_COMMIT_SHA
  dependencies:
  - package_release

cp_gcloud_master:
  image: blockstream/gcloud-docker-tf:1.1.7
  tags:
    - ga
  stage: publish
  only:
    refs:
      - master
  script:
    - TMPF=$(mktemp) || exit 1
    - echo $GCLOUD_PUSH_KEY > $TMPF
    - export GOOGLE_APPLICATION_CREDENTIALS=$TMPF
    - gcloud auth activate-service-account --key-file=$TMPF
    - gsutil rm -r gs://green-gdk-builds/gdk-master || echo fail # avoid failing when dir does not exist
    - gsutil cp -r $CI_PROJECT_DIR/gdk_dist gs://green-gdk-builds/gdk-master
  dependencies:
  - package_release

